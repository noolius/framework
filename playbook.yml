---
  - name: Provisioning Alpine 3.14 K8s (control-planes)
    hosts: control_planes
    become: true
    tasks:
      - name: Downloading Helm cli
        get_url:
          url: https://get.helm.sh/helm-v3.6.3-linux-amd64.tar.gz
          dest: /root/helm-v3.6.3-linux-amd64.tar.gz
          checksum: sha256:07c100849925623dc1913209cd1a30f0a9b80a5b4d6ff2153c609d11b043e262
      - name: Downloading kapp cli
        get_url:
          url: https://github.com/vmware-tanzu/carvel-kapp/releases/download/v0.37.0/kapp-linux-amd64
          dest: /root/kapp-linux-amd64
          checksum: sha256:f845233deb6c87feac7c82d9b3f5e03ced9a4672abb1a14d4e5b74fe53bc4538
      - name: Downloading and installing Linkerd edge cli
        get_url:
          url: https://github.com/linkerd/linkerd2/releases/download/edge-21.9.1/linkerd2-cli-edge-21.9.1-linux-amd64
          dest: /usr/local/bin/linkerd
          owner: root
          group: root
          mode: '0555'
          checksum: sha256:bc4b338840731776e92a2ea2932053a5081aa3c63761776b8793e09d25855719
      - name: Extracting Helm cli
        unarchive:
          src: /root/helm-v3.6.3-linux-amd64.tar.gz
          dest: /root
          remote_src: true
          extra_opts:
          - linux-amd64/helm
      - name: Installing Helm cli
        copy:
          src: /root/linux-amd64/helm
          dest: /usr/local/bin/helm
          owner: root
          group: root
          mode: '0555'
          remote_src: true
      - name: Downloading and installing Cilium cli
        get_url:
          url: https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-amd64.tar.gz
          dest: /usr/local/bin/cilium
          owner: root
          group: root
          mode: '0555'
          checksum: sha256:dde868441fd1fa56f7b2125c7a661d731aaf7d99d500faff998e2f8b1e7c9f57
      - name: Installing Hubble cli
        unarchive:
          src: https://github.com/cilium/hubble/releases/latest/download/hubble-linux-amd64.tar.gz
          dest: /usr/local/bin
          owner: root
          group: root
          mode: '0555'
          remote_src: true
      - name: Installing kapp
        copy:
          src: /root/kapp-linux-amd64
          dest: /usr/local/bin/kapp
          owner: root
          group: root
          mode: '0555'
          remote_src: true
      - name: Installing cf cli
        unarchive:
          src: https://s3-us-west-1.amazonaws.com/v7-cf-cli-releases/releases/v7.2.0/cf7-cli_7.2.0_linux_x86-64.tgz
          dest: /usr/local/bin
          owner: root
          group: root
          mode: '0555'
          remote_src: true
          extra_opts:
          - cf7
          - cf
  - name: Provisioning Alpine 3.14 K8s (all)
    hosts: "*"
    become: true
    vars:
      more_modules: |
        overlay
        br_netfilter
        wireguard
      sysctl_tunables: |
        net.ipv4.ip_forward = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.netfilter.nf_conntrack_max = 1000000
      repo_contents: |
        https://dl-3.alpinelinux.org/alpine/edge/main
        https://dl-3.alpinelinux.org/alpine/edge/community
        https://dl-3.alpinelinux.org/alpine/edge/testing
      mount_rshared_openrc: |
        #!/sbin/openrc-run
        name="mount_rshared"
        command="/bin/mount"
        command_args="--make-rshared /"
        depend() {
          before kubelet
        }
    tasks:
      - name: Configuring additional kernel modules to load
        copy:
          content: "{{ more_modules }}"
          dest: /etc/modules-load.d/K8s.conf
          mode: '0444'
      - name: Configuring sysctl tunables
        copy:
          content: "{{ sysctl_tunables }}"
          dest: /etc/sysctl.d/K8s_v2.conf
          mode: '0444'
      - name: Replacing /e/apk/repositories with edge/*
        copy:
          content: "{{ repo_contents }}"
          dest: /etc/apk/repositories
          owner: root
          group: root
          mode: '0444'
          backup: true
      - name: Upgrading distro packages to their latest versions
        community.general.apk:
          update_cache: true
          upgrade: true
        register: upgrading
        failed_when: "'timed out' in upgrading.stderr"
      - name: Re-attempting packages upgrade
        community.general.apk:
          upgrade: true
        when: upgrading is not succeeded
      - name: Adding cluster packages
        community.general.apk:
          name:
            - wireguard-tools
            - salt-minion
            - containerd
            - containerd-openrc
            - cni-plugins
            - conntrack-tools
            - socat
            - jq
            - kubelet
            - kubeadm
            - cri-tools
            - virtualbox-guest-additions-openrc
          state: latest
      - name: Set /srv 01777 for use by PVs
        file:
          path: /srv
          state: directory
          owner: root
          group: root
          mode: '01777'
      - name: Checking whether to configure salt-minion
        ansible.builtin.stat:
          path: /vagrant/no_salt
        register: test_contents
      - name: Getting fingerprint of salt server
        ansible.builtin.command: cat pub_fingerprint
        register: fingerprint
        when: not test_contents.stat.exists
      - name: Creating /e/salt/minion.d
        file:
          path: /etc/salt/minion.d
          state: directory
          owner: root
          group: salt
          mode: '0750'
        when: not test_contents.stat.exists
      - name: Seeding salt-master IPv4
        copy:
          content: "master: '{{ ansible_default_ipv4.gateway }}'"
          dest: /etc/salt/minion.d/master.conf
          owner: root
          group: salt
          mode: '0440'
        when: not test_contents.stat.exists
      - name: Seeding salt-master key
        copy:
          content: "master_finger: '{{ fingerprint.stdout }}'"
          dest: /etc/salt/minion.d/master_finger.conf
          owner: root
          group: salt
          mode: '0440'
        when: not test_contents.stat.exists
      - name: Creating OpenRC script to mount --make-rshared /
        copy:
          content: "{{ mount_rshared_openrc }}"
          dest: /etc/init.d/mount_rshared
          owner: root
          group: root
          mode: '0550'
      - name: Enabling salt-minion service
        service:
          name: salt-minion
          enabled: true
        when: not test_contents.stat.exists
      - name: Enabling kubelet service
        service:
          name: kubelet
          enabled: true
      - name: Enabling containerd service
        service:
          name: containerd
          enabled: true
      - name: Enabling service to mount --make-rshared /
        service:
          name: mount_rshared
          enabled: true
      - name: Enabling virtualbox-guest-additions service
        service:
          name: virtualbox-guest-additions
          enabled: true
  - name: Provisioning Alpine 3.14 K8s (control-planes...more)
    hosts: control_planes
    become: true
    tasks:
      - name: Adding cluster packages specific to control-planes
        community.general.apk:
          name:
            - kubectl
            - ytt
          state: latest
