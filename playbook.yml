---
  - name: Provisioning Alpine 3.15 K8s (control-planes)
    hosts: control_planes
    become: true
    vars:
      consul_k8s_version: 0.41.1
      cilium_cli_version: v0.10.4
      hubble_version: v0.9.0
      cosign_version: v1.6.0
      helm_version: v3.8.1
      kapp_version: v0.46.0
      crank_version: v1.6.4
      thanos_cli_version: 0.24.0
      kustomize_version: v4.4.1
      cf_version: 8.2.0
      certmanager_version: v1.6.1
    tasks:
      - name: Downloading cosign
        get_url:
          url: https://github.com/sigstore/cosign/releases/download/{{ cosign_version | quote }}/cosign-linux-amd64
          dest: /usr/local/bin/cosign
          owner: root
          group: root
          mode: '0555'
          checksum: sha256:b62ac8c1ab1cdb072d442d2f3db7d7ffe977566a6170cd03dd48e4583dad3203
      - name: Downloading Helm cli
        get_url:
          url: https://get.helm.sh/helm-{{ helm_version | quote }}-linux-amd64.tar.gz
          dest: /root/helm-{{ helm_version | quote }}-linux-amd64.tar.gz
          mode: '0400'
          checksum: sha256:d643f48fe28eeb47ff68a1a7a26fc5142f348d02c8bc38d699674016716f61cd
      - name: Extracting Helm cli
        unarchive:
          src: /root/helm-{{ helm_version | quote }}-linux-amd64.tar.gz
          dest: /root
          mode: '0400'
          remote_src: true
          extra_opts:
          - linux-amd64/helm
      - name: Installing Helm cli
        copy:
          src: /root/linux-amd64/helm
          dest: /usr/local/bin/helm
          owner: root
          group: root
          mode: '0555'
          remote_src: true
      - name: Downloading and installing kapp cli
        get_url:
          url: https://github.com/vmware-tanzu/carvel-kapp/releases/download/{{ kapp_version | quote }}/kapp-linux-amd64
          dest: /usr/local/bin/kapp
          owner: root
          group: root
          mode: '0555'
          checksum: sha256:130f648cd921761b61bb03d7a0f535d1eea26e0b5fc60e2839af73f4ea98e22f
      - name: Downloading consul-k8s cli
        get_url:
          url: https://releases.hashicorp.com/consul-k8s/{{ consul_k8s_version |
            quote }}/consul-k8s_{{ consul_k8s_version | quote }}_linux_amd64.zip
          dest: /root/consul-k8s_{{ consul_k8s_version | quote }}_linux_amd64.zip
          owner: root
          group: root
          mode: '0400'
          checksum: sha256:0c59cb11bed051e57dbeabac557bc40714bb74a907786f19fb15f88027d2c6ef
      - name: Adding unzip package
        community.general.apk:
          name:
            - unzip
          state: latest
      - name: Installing consul-k8s cli
        unarchive:
          src: /root/consul-k8s_{{ consul_k8s_version | quote }}_linux_amd64.zip
          dest: /usr/local/bin
          owner: root
          group: root
          mode: '0555'
          remote_src: true
      - name: Downloading and installing Crossplane cli
        get_url:
          url: https://releases.crossplane.io/stable/{{ crank_version | quote }}/bin/linux_amd64/crank
          dest: /usr/local/bin/kubectl-crossplane
          owner: root
          group: root
          mode: '0555'
          checksum: sha256:0130e077172d66f5470de9e507ecd2b0c2dc2d46aea0ad8e1996852752a1808b
      - name: Downloading Cilium cli
        get_url:
          url: https://github.com/cilium/cilium-cli/releases/download/{{ cilium_cli_version | quote }}/cilium-linux-amd64.tar.gz
          dest: /root/cilium-linux-amd64.tar.gz
          mode: '0400'
          checksum: sha256:8681d274933f2d46ea64773b4f45a248d6c25d7acaf9e4e15fd504e640dd7658
      - name: Installing Cilium cli
        unarchive:
          src: /root/cilium-linux-amd64.tar.gz
          dest: /usr/local/bin
          owner: root
          group: root
          mode: '0555'
          remote_src: true
      - name: Downloading Hubble cli
        get_url:
          url: https://github.com/cilium/hubble/releases/download/{{ hubble_version | quote }}/hubble-linux-amd64.tar.gz
          dest: /root/hubble-linux-amd64.tar.gz
          mode: '0400'
          checksum: sha256:63d62f6ea4b2daedaa08f95fbb95e457b4ee5d00167f4a84af0ba7ca3225924d
      - name: Installing Hubble cli
        unarchive:
          src: /root/hubble-linux-amd64.tar.gz
          dest: /usr/local/bin
          owner: root
          group: root
          mode: '0555'
          remote_src: true
      - name: Downloading Thanos cli
        get_url:
          url: https://github.com/thanos-io/thanos/releases/download/v{{ thanos_cli_version |
            quote }}/thanos-{{ thanos_cli_version | quote }}.linux-amd64.tar.gz
          dest: /root/thanos-{{ thanos_cli_version | quote }}.linux-amd64.tar.gz
          mode: '0400'
          checksum: sha256:0f27e3758434a82247ab31eaf19dc84d5d36b891b347c702df01c76d3c73ada5
      - name: Extracting Thanos cli
        unarchive:
          src: /root/thanos-{{ thanos_cli_version | quote }}.linux-amd64.tar.gz
          dest: /root
          mode: '0400'
          remote_src: true
          extra_opts:
          - thanos-{{ thanos_cli_version | quote }}.linux-amd64/thanos
      - name: Installing Thanos cli
        copy:
          src: /root/thanos-{{ thanos_cli_version | quote }}.linux-amd64/thanos
          dest: /usr/local/bin/thanos
          owner: root
          group: root
          mode: '0555'
          remote_src: true
      - name: Downloading cf v8 cli
        get_url:
          url: https://packages.cloudfoundry.org/stable?release=linux64-binary&version={{ cf_version | quote }}&source=github-rel
          dest: /root/cf8-cli_{{ cf_version | quote }}_linux_x86-64.tgz
          mode: '0400'
          checksum: sha256:dadbb24dba7ef41f935b72f70d66b9b9c78df1781f67682ad0c116be92644693
      - name: Installing cf v8 cli
        unarchive:
          src: /root/cf8-cli_{{ cf_version | quote }}_linux_x86-64.tgz
          dest: /usr/local/bin
          owner: root
          group: root
          mode: '0555'
          remote_src: true
          extra_opts:
          - cf8
        register: installing_cf_v8_cli
      - name: Symlinking cf v8 cli
        file:
          src: /usr/local/bin/cf8
          dest: /usr/local/bin/cf
          owner: root
          group: root
          state: link
        when: installing_cf_v8_cli is succeeded
      - name: Downloading kubectl cert-manager
        get_url:
          url: https://github.com/jetstack/cert-manager/releases/download/{{ certmanager_version | quote }}/kubectl-cert_manager-linux-amd64.tar.gz
          dest: /root/kubectl-cert_manager-linux-amd64.tar.gz
          owner: root
          group: root
          mode: '0400'
          checksum: sha256:cf9cb0b1020cc437d431805be4baf2bc9de6de0b06e7821b0dd7d5d598cc1f36
      - name: Installing kubectl cert-manager
        unarchive:
          src: /root/kubectl-cert_manager-linux-amd64.tar.gz
          dest: /usr/local/bin
          owner: root
          group: root
          mode: '0555'
          remote_src: true
          extra_opts:
          - kubectl-cert_manager
      - name: Downloading Kustomize
        get_url:
          url: https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F{{ kustomize_version |
            quote }}/kustomize_{{ kustomize_version | quote }}_linux_amd64.tar.gz
          dest: /root/kustomize_{{ kustomize_version | quote }}_linux_amd64.tar.gz
          owner: root
          group: root
          mode: '0400'
          checksum: sha256:2d5927efec40ba32a121c49f6df9955b8b8a296ef1dec4515a46fc84df158798
      - name: Installing Kustomize
        unarchive:
          src: /root/kustomize_{{ kustomize_version | quote }}_linux_amd64.tar.gz
          dest: /usr/local/bin
          owner: root
          group: root
          mode: '0555'
          remote_src: true
          extra_opts:
          - kustomize
  - name: Provisioning Alpine 3.15 K8s (all)
    hosts: "*"
    become: true
    vars:
      doas_d_conf: |
        permit nopass keepenv setenv { PATH } root as root
        permit nopass keepenv setenv { PATH } vagrant as root
      more_modules: |
        overlay
        br_netfilter
        wireguard
      sysctl_tunables: |
        net.ipv4.ip_forward = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.netfilter.nf_conntrack_max = 1000000
      repo_contents: |
        https://dl-3.alpinelinux.org/alpine/edge/main
        https://dl-3.alpinelinux.org/alpine/edge/community
        https://dl-3.alpinelinux.org/alpine/edge/testing
      mount_rshared_openrc: |
        #!/sbin/openrc-run
        name="mount_rshared"
        command="/bin/mount"
        command_args="--make-rshared /"
        depend() {
          before kubelet
        }
    tasks:
      - name: Configuring /e/doas.conf
        copy:
          content: "{{ doas_d_conf }}"
          dest: /etc/doas.conf
          owner: root
          group: root
          mode: '0600'
          backup: true
      - name: Configuring additional kernel modules to load
        copy:
          content: "{{ more_modules }}"
          dest: /etc/modules-load.d/K8s.conf
          mode: '0440'
      - name: Configuring sysctl tunables
        copy:
          content: "{{ sysctl_tunables }}"
          dest: /etc/sysctl.d/K8s_v2.conf
          mode: '0440'
      - name: Replacing /e/apk/repositories with edge/*
        copy:
          content: "{{ repo_contents }}"
          dest: /etc/apk/repositories
          owner: root
          group: root
          mode: '0444'
          backup: true
      - name: Upgrading distro packages to their latest versions
        community.general.apk:
          update_cache: true
          upgrade: true
        register: upgrading
        failed_when: "'timed out' in upgrading.stderr"
      - name: Re-attempting packages upgrade
        community.general.apk:
          upgrade: true
        when: upgrading is not succeeded
      - name: Adding cluster packages
        community.general.apk:
          name:
            - wireguard-tools
            - salt-minion
            - containerd
            - containerd-openrc
            - cni-plugins
            - conntrack-tools
            - socat
            - jq
            - kubelet
            - kubelet-openrc
            - kubeadm
            - cri-tools
            - doas
          state: latest
      - name: Checking whether to configure salt-minion
        ansible.builtin.stat:
          path: /vagrant/no_salt
        register: test_contents
      - name: Getting fingerprint of salt server
        ansible.builtin.command: cat /vagrant/pub_fingerprint
        register: fingerprint
        when: not test_contents.stat.exists
      - name: Creating /e/salt/minion.d
        file:
          path: /etc/salt/minion.d
          state: directory
          owner: root
          group: root
          mode: '0755'
        when: not test_contents.stat.exists
      - name: Seeding salt-master IPv4
        copy:
          content: "master: '{{ ansible_default_ipv4.gateway }}'"
          dest: /etc/salt/minion.d/master.conf
          owner: root
          group: root
          mode: '0444'
        when: not test_contents.stat.exists
      - name: Seeding salt-master public key fingerprint
        copy:
          content: "master_finger: '{{ fingerprint.stdout }}'"
          dest: /etc/salt/minion.d/master_finger.conf
          owner: root
          group: root
          mode: '0444'
        when: not test_contents.stat.exists
      - name: Creating OpenRC script to mount --make-rshared /
        copy:
          content: "{{ mount_rshared_openrc }}"
          dest: /etc/init.d/mount_rshared
          owner: root
          group: root
          mode: '0550'
      - name: Enabling salt-minion service
        service:
          name: salt-minion
          enabled: true
        when: not test_contents.stat.exists
      - name: Enabling kubelet service
        service:
          name: kubelet
          enabled: true
      - name: Enabling containerd service
        service:
          name: containerd
          enabled: true
      - name: Enabling service to mount --make-rshared /
        service:
          name: mount_rshared
          enabled: true
  - name: Provisioning Alpine 3.15 K8s (control-planes...more)
    hosts: control_planes
    become: true
    tasks:
      - name: Adding cluster packages specific to control-planes
        community.general.apk:
          name:
            - etcd
            - etcd-openrc
            - etcd-ctl
            - kubectl
            - patch
            - arping
            - git
            - yajl
            - coreutils
          state: latest
      - name: Checking whether to copy kcat
        ansible.builtin.stat:
          path: /vagrant/kcat
        register: test_kcat
      - name: Copying kcat
        copy:
          src: /vagrant/kcat
          dest: /usr/local/bin/kcat
          owner: root
          group: root
          mode: '0555'
          remote_src: true
          checksum: 7640e8c2b3d681edc04f8ad6384e822d877c89ed
        when: test_kcat.stat.exists
      - name: Checking whether to copy stern
        ansible.builtin.stat:
          path: /vagrant/stern
        register: test_stern
      - name: Copying stern
        copy:
          src: /vagrant/stern
          dest: /usr/local/bin/stern
          owner: root
          group: root
          mode: '0555'
          remote_src: true
          checksum: a776b5c4d8fa9d253e1f911d86eb1ca78934ff16
        when: test_stern.stat.exists
      - name: Checking whether to copy kubectx
        ansible.builtin.stat:
          path: /vagrant/kubectx
        register: test_kubectx
      - name: Copying kubectx
        copy:
          src: /vagrant/kubectx
          dest: /usr/local/bin/kubectx
          owner: root
          group: root
          mode: '0555'
          remote_src: true
          checksum: 943c0d47b5bd45fe0f8ea6b43dada537f87acbd6
        when: test_kubectx.stat.exists
      - name: Checking whether to copy kubens
        ansible.builtin.stat:
          path: /vagrant/kubens
        register: test_kubens
      - name: Copying kubens
        copy:
          src: /vagrant/kubens
          dest: /usr/local/bin/kubens
          owner: root
          group: root
          mode: '0555'
          remote_src: true
          checksum: 8244d59345c9f78572db4a86b628a9cab13ebc92
        when: test_kubens.stat.exists
